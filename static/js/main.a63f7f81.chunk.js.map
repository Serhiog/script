{"version":3,"sources":["store/action.js","components/side/side.jsx","components/initil-inputs/initial-inputs.jsx","components/buttons-variants/buttonts-variants.jsx","mocks.js","components/tooltip/tooltip.jsx","components/getPerson/withMe.jsx","components/getPerson/connectWithBoss.jsx","components/getPerson/whatDoYouWant.jsx","components/getPerson/getPerson.jsx","components/calculate/calculate.jsx","components/dialog/dialog.jsx","components/script/script.jsx","App.js","store/getPersonReducer/getPersonReducer.js","store/initial-inputsReducer/initial-inputsReducer.js","store/rootReducer.js","index.js"],"names":["ActionType","ActionCreator","name","type","payload","product","nextStep","btn","useStyles","makeStyles","list","width","fullList","TemporaryDrawer","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","key","className","clsx","role","onClick","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Fragment","Button","Drawer","onClose","setNewName","setNewProduct","connect","Paper","elevation","FormControl","variant","style","marginBottom","InputLabel","htmlFor","marginRight","Input","label","fontSize","background","borderRadius","borderBottom","id","onChange","evt","preventDefault","target","value","setGetPersonBtn","variantButtons","handleBtn","actualBtn","closest","dataset","size","color","data-name","Mocks","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","maxWidth","typography","pxToRem","border","Tooltip","CustomizedTooltips","display","enterDelay","leaveDelay","title","Typography","height","WithMe","handleNextBtn","isCalculate","endIcon","Icon","disabled","ConnectWithBoss","WhatDoYouWant","setNextStep","getPerson","initialInputs","managerName","Card","component","CardActionArea","Calculate","visitors","setVisitors","orders","setOrders","sells","setSells","count","setCount","Math","floor","Script","App","createMuiTheme","palette","ThemeProvider","initialState","combineReducers","action","Object","assign","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a63f7f81.chunk.js","sourcesContent":["export const ActionType = {\r\n  SET_MANAGER_NAME: \"SET_MANAGER_NAME\",\r\n  SET_PRODUCT: \"SET_PRODUCT\",\r\n  SET_NEXT_STEP: \"SET_NEXT_STEP\",\r\n  SET_GET_PERSON_BTN: \"SET_GET_PERSON_BTN\"\r\n};\r\n\r\nexport const ActionCreator = {\r\n  setNewName: (name) => ({\r\n    type: ActionType.SET_MANAGER_NAME,\r\n    payload: name,\r\n  }),\r\n  setNewProduct: (product) => ({\r\n    type: ActionType.SET_PRODUCT,\r\n    payload: product,\r\n  }),\r\n  setIsCalculate: (nextStep) => ({\r\n    type: ActionType.SET_NEXT_STEP,\r\n    payload: nextStep,\r\n  }),\r\n  setGetPersonBtn: (btn) => ({\r\n    type: ActionType.SET_GET_PERSON_BTN,\r\n    payload: btn,\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                {['1', '2', '3', '4'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['5', '6', '7'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {['Работа с возражениями'].map((anchor) => (\r\n                <React.Fragment key={anchor}>\r\n                    <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n                    <Drawer open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                        {list(anchor)}\r\n                    </Drawer>\r\n                </React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n}","\r\nimport { FormControl, Input, InputLabel, Paper } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { ActionCreator } from \"../../store/action\"\r\nimport TemporaryDrawer from \"../side/side\";\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\r\n\r\nconst setNewName = ActionCreator.setNewName\r\nconst setNewProduct = ActionCreator.setNewProduct\r\n\r\nconst InitialInputs = ({ setNewName, setNewProduct }) => {\r\n\r\n    const handleName = (evt) => {\r\n        evt.preventDefault()\r\n        setNewName(evt.target.value)\r\n    }\r\n\r\n    const handleProduct = (evt) => {\r\n        evt.preventDefault()\r\n        setNewProduct(evt.target.value)\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={5} className=\"inputs\">\r\n            <div className=\"inputs__inner\">\r\n                <p className=\"inputs__title\">Вводные данные</p>\r\n                <FormControl variant=\"outlined\" style={{ marginBottom: \"20px\" }}>\r\n                    <InputLabel className=\"inputs__name-label\" htmlFor=\"name\"><PermIdentityIcon style={{ marginBottom: \"-5px\", marginRight: \"3px\" }} />Имя менеджера:</InputLabel>\r\n                    <Input label=\"Outlined secondary\" style={{ fontSize: \"20px\", background: \"RGB(255, 218, 224)\", borderRadius: \"10px\", borderBottom: \"none\" }} className=\"inputs__name-input\" id=\"name\" onChange={handleName}></Input>\r\n                </FormControl>\r\n                <FormControl variant=\"outlined\">\r\n                    <InputLabel className=\"inputs__name-label\" htmlFor=\"product\"><WorkOutlineIcon style={{ marginBottom: \"-5px\", marginRight: \"3px\" }} />Продукт клиента:</InputLabel>\r\n                    <Input style={{ fontSize: \"20px\", background: \"RGB(255, 218, 224)\", borderRadius: \"10px\", borderBottom: \"none\" }} className=\"inputs__name-input\" id=\"product\" onChange={handleProduct}></Input>\r\n                </FormControl>\r\n                <TemporaryDrawer />\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default connect(null, { setNewName, setNewProduct })(InitialInputs)","import { Button } from \"@material-ui/core\"\r\nimport { connect } from \"react-redux\";\r\nimport {ActionCreator} from \"../../store/action\"\r\n\r\nconst setGetPersonBtn = ActionCreator.setGetPersonBtn\r\n\r\nconst ButtonsVariants = ({ variantButtons, setGetPersonBtn }) => {\r\n\r\n    const handleBtn = (evt) => {\r\n        const actualBtn = evt.target.closest(\"button\").dataset.name;\r\n        setGetPersonBtn(actualBtn)\r\n    }\r\n    return (\r\n        <ul className=\"btn-variants\">\r\n            {variantButtons.map(btn => {\r\n                return (\r\n                    <li key={btn.id} className=\"dialog__item dialog__item--btn btn-variants-item\">\r\n                        <Button onClick={handleBtn} size=\"large\" variant=\"contained\" color=\"secondary\" className=\"dialog__get-person-btn\" data-name={btn.name} >{btn.text}</Button>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default connect(null, { setGetPersonBtn })(ButtonsVariants)","export const Mocks = {\r\n  getPersonBtns: () => (\r\n    [{\r\n      id: 1,\r\n      text: \"Со мной\",\r\n      name: \"withMe\",\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Переключаю на ЛПР\",\r\n      name: \"connectWithBoss\",\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Что вы хотите предложить??\",\r\n      name: \"whatDoYouWant\",\r\n    }]\r\n  ),\r\n};\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 820,\r\n        fontSize: theme.typography.pxToRem(33),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\n\r\nexport default function CustomizedTooltips({ text }) {\r\n    return (\r\n        <div style={{ display: \"inline\" }}>\r\n            <HtmlTooltip\r\n                enterDelay={500} leaveDelay={200}\r\n                title={\r\n                    <>\r\n                        <Typography>Подсказка</Typography>\r\n                        {\"Необходимо с серьезным выражением прочитать эту формулировку так как нам нужен именно РУКОВОДИТЕЛЬ\"}\r\n                    </>\r\n                }\r\n            >\r\n                <Button><span className=\"dialog__attention\">{text}<InfoIcon style={{ color: \"green\", width: \"22px\", height: \"22px\" }} /></span></Button>\r\n            </HtmlTooltip>\r\n        </div>\r\n    );\r\n}","import CustomizedTooltips from \"../tooltip/tooltip\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport {Icon } from \"@material-ui/core\"\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nconst WithMe = ({handleNextBtn, isCalculate}) => {\r\n    return (\r\n        <>\r\n            <li className=\"dialog__item dialog__item--manager\">\r\n                <p className=\"dialog__manager\">Как вас зовут? Вы руководитель?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--client\">\r\n                <p className=\"dialog__client\">Представляется...</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--manager\">\r\n                <p className=\"dialog__manager\">Вы принимаете <CustomizedTooltips text={\"финансовые решения\"}/> в компании?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--btn\">\r\n                <Button onClick={handleNextBtn} endIcon={<Icon><ArrowDropDownIcon/></Icon>} size=\"large\" disabled={isCalculate} variant=\"contained\" color=\"primary\" className=\"dialog__get-person-btn\" data-name=\"calculate\" >Далее Расчет</Button>\r\n            </li> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default WithMe","import CustomizedTooltips from \"../tooltip/tooltip\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { Icon } from \"@material-ui/core\"\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nconst ConnectWithBoss = ({ name, product, handleNextBtn, isCalculate }) => {\r\n    return (\r\n        <>\r\n            <li className=\"dialog__item dialog__item--manager\">\r\n                <p className=\"dialog__manager\">Здравствуйте, как к вам обращаться? Вы руководитель?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--client\">\r\n                <p className=\"dialog__client\">Представляется...</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--manager\">\r\n                <p className=\"dialog__manager\">Вы принимаете <CustomizedTooltips text={\"финансовые решения\"} /> в компании?</p>\r\n            </li>\r\n            <li className=\"dialog__item\">\r\n                <p className=\"dialog__manager\">Отлично, меня {name || <span className=\"dialog__noValue\">ИМЯ</span>} зовут, компания ВонтРезалт, я по поводу <span className=\"dialog__attention\">передачи клиентов</span>. У нас есть <span className=\"dialog__attention\">заинтересованные клиенты</span> в покупке {product || <span className=\"dialog__noValue\">ПРОДУКТ</span>} . Готовы передавать их вам на определенных условиях. С вами можно обсудить?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--btn\">\r\n                <Button onClick={handleNextBtn} endIcon={<Icon><ArrowDropDownIcon/></Icon>} size=\"large\" disabled={isCalculate} variant=\"contained\" color=\"primary\" className=\"dialog__get-person-btn\" data-name=\"calculate\" >Далее Расчет</Button>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConnectWithBoss","import CustomizedTooltips from \"../tooltip/tooltip\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport {Icon } from \"@material-ui/core\"\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nconst WhatDoYouWant = ({product}) => {\r\n    return (\r\n        <>\r\n            <li className=\"dialog__item\">\r\n                <p className=\"dialog__manager\">Смотрите, можем вам регулярно передавать контакты людей которые заинтересованы в покупке {product},при чем как показывает опыт, таких заявок будет минимум в 5 раз больше чем у вас есть на данный момент. То есть вопрос довольно серьезный так как речь о деньгах пойдет. Поэтому мне нужен руководитель с которым можно обсудить условия передачи таких клиентов.</p>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WhatDoYouWant","import { connect } from \"react-redux\"\r\nimport { ActionCreator } from \"../../store/action\"\r\nimport { Card, CardActionArea } from \"@material-ui/core\"\r\nimport ButtonsVariants from \"../buttons-variants/buttonts-variants\"\r\nimport { Mocks } from \"../../mocks\"\r\nimport WithMe from \"./withMe\"\r\nimport ConnectWithBoss from \"./connectWithBoss\"\r\nimport WhatDoYouWant from \"./whatDoYouWant\"\r\n\r\nconst setNextStep = ActionCreator.setIsCalculate\r\n\r\nconst GetPerson = ({ name, product, setNextStep, isCalculate, actualBtn }) => {\r\n\r\n    const handleNextBtn = (evt) => {\r\n        evt.preventDefault()\r\n        setNextStep(evt.target.dataset.name)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"dialog__list dialog__list--getPerson\">\r\n            <Card component=\"li\" className=\"dialog__item\" style={{ borderRadius: \"20px\" }}>\r\n                <CardActionArea>\r\n                    <p className=\"dialog__manager\">Здравствуйте, меня {name || <span className=\"dialog__noValue\">ИМЯ</span>} зовут, звоню по поводу <span className=\"dialog__attention\">передачи клиентов</span>. У нас есть заинтересованные клиенты в покупке {product || <span className=\"dialog__noValue\">ПРОДУКТ</span>} . Готовы передавать их вам на определенных условиях. С кем можно обсудить финансовый вопрос и условия передачи?</p>\r\n                </CardActionArea>\r\n            </Card>\r\n            <ButtonsVariants variantButtons={Mocks.getPersonBtns()} />\r\n            {actualBtn === \"withMe\" && <WithMe\r\n                handleNextBtn={handleNextBtn}\r\n                isCalculate={isCalculate}\r\n            />}\r\n            {actualBtn === \"connectWithBoss\" && <ConnectWithBoss\r\n                name={name}\r\n                product={product}\r\n                handleNextBtn={handleNextBtn}\r\n                isCalculate={isCalculate} />}\r\n            {actualBtn === \"whatDoYouWant\" && <WhatDoYouWant product={product}/>}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isCalculate: state.getPerson.isCalculate,\r\n    actualBtn: state.getPerson.actualBtn,\r\n    name: state.initialInputs.managerName,\r\n    product: state.initialInputs.product\r\n})\r\n\r\nexport default connect(mapStateToProps, { setNextStep })(GetPerson)\r\n","import { FormControl, Input, InputLabel } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\n\r\nconst Calculate = () => {\r\n\r\n    const [visitors, setVisitors] = useState(0)\r\n    const handleVisitors = (evt) => {\r\n        evt.preventDefault()\r\n        setVisitors(evt.target.value)\r\n    }\r\n\r\n    const [orders, setOrders] = useState(0)\r\n    const handleOrders = (evt) => {\r\n        evt.preventDefault()\r\n        setOrders(evt.target.value)\r\n    }\r\n\r\n    const [sells, setSells] = useState(0)\r\n    const handleSells = (evt) => {\r\n        evt.preventDefault()\r\n        setSells(evt.target.value)\r\n    }\r\n\r\n\r\n    const [count, setCount] = useState(0)\r\n    const handleCount = (evt) => {\r\n        evt.preventDefault()\r\n        setCount(evt.target.value)\r\n\r\n    }\r\n\r\n    return (\r\n        <ul className=\"dialog__list dialog__list--calculate\">\r\n            <li className=\"dialog__item\">\r\n                <p className=\"dialog__manager\">Приятно познакомиться. Для того чтобы понять что мы можем в вашем случае предложить и на каких именно условиях, нужно знать <span className=\"dialog__attention\">текущую ситуацию</span>. Скажите, вы продвигаете ваш сайт в интернете?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--client\">\r\n                <p className=\"dialog__client\">Да</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--system\">\r\n                <p className=\"dialog__manager\">Ага, вам известно сколько посетителей на нем в месяц?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--client\">\r\n                <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"visitors\">посетители</InputLabel>\r\n                    <Input style={{ fontSize: \"20px\", background: \"white\", borderRadius: \"10px\" }} className=\"dialog__input\" onChange={handleVisitors} id=\"visitors\"></Input>\r\n                </FormControl>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--system\">\r\n                <p className=\"dialog__manager\">Ага, сколько заявок ваши клиенты отправляют в месяц?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--client\">\r\n                <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"requests\">заявки</InputLabel>\r\n                    <Input style={{ fontSize: \"20px\", background: \"white\", borderRadius: \"10px\" }} className=\"dialog__input\" onChange={handleOrders} id=\"requests\"></Input>\r\n                </FormControl>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--system\">\r\n                <p className=\"dialog__manager\">А сколько продаж из числа заявок?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--client\">\r\n                <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"sells\">продажи</InputLabel>\r\n                    <Input style={{ fontSize: \"20px\", background: \"white\", borderRadius: \"10px\" }} className=\"dialog__input\" onChange={handleSells} id=\"sells\"></Input>\r\n                </FormControl>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--system\">\r\n                <p className=\"dialog__manager\">Ага... а средний чек какой?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--client\">\r\n                <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"value\">средний чек</InputLabel>\r\n                    <Input style={{ fontSize: \"20px\", background: \"white\", borderRadius: \"10px\" }} className=\"dialog__input\" onChange={handleCount} id=\"value\"></Input>\r\n                </FormControl>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--system\">\r\n                <p className=\"dialog__manager\"> Понятно… <span className=\"dialog__item-comment\">очень подробно проговариваете с клиентом:</span></p>\r\n            </li>\r\n            <li className=\"dialog__item\">\r\n                <p className=\"dialog__manager\">То есть (Допустим) к вам на сайт заходит <span className=\"dialog__nums\">{visitors}</span> человек. Из них заявки оставляют <span className=\"dialog__nums\">{orders}</span>. И затем покупают <span className=\"dialog__nums\">{sells}</span> человек со средним чеком <span className=\"dialog__nums\">{count}р</span> . То есть общий оборот получается <span className=\"dialog__nums\">{+count * +sells}р</span>.</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--manager\">\r\n                <p className=\"dialog__manager dialog__item--manager\">Я правильно посчитала? Примерно так и есть?</p>\r\n            </li>\r\n            <li className=\"dialog__item dialog__item--client dialog__item--bottom-right\">\r\n                <p className=\"dialog__client\">Да…</p>\r\n            </li>\r\n            <li className=\"dialog__item\">\r\n                <p className=\"dialog__manager\">Хорошо.... теперь <span className=\"dialog__attention\">что мы можем предложить</span> вам… смотрите, мы можем увеличить число ваших заявок примерно в 6-7 раз. То есть у вас будет не <span className=\"dialog__nums\">{orders}</span> заявок, а примерно <span className=\"dialog__nums\">{orders * 6}</span>. А если учесть вашу конверсию в покупку, которая в данный момент равна {!sells ? <span className=\"dialog__nums\">0</span> : <span className=\"dialog__nums\">{Math.floor(sells / orders * 100)}%</span>}  то количество продаж составит примерно….ммм... предлагаю посчитать по самому минимуму, путь будет в 5 раз больше заявок, а не в 6, то получается  {!sells ? <span className=\"dialog__nums\">0</span> : <span className=\"dialog__nums\">{Math.floor(orders * 5 * Math.floor(sells / orders * 100) / 100)}</span>} продаж. То есть вместо <span className=\"dialog__nums\">{sells}</span> будет {!sells ? <span className=\"dialog__nums\">0</span> : <span className=\"dialog__nums\">{Math.floor(orders * 5 * Math.floor(sells / orders * 100) / 100)}</span>} продаж! И это по самым скромным подсчетам...</p>\r\n            </li>\r\n            <li className=\"dialog__item\">\r\n                <p className=\"dialog__manager\">А что касаемо оборота, то он вырастет с <span className=\"dialog__nums\">{+count * +sells}</span>р до примерно {!sells ? <span className=\"dialog__nums\">0</span> : <span className=\"dialog__nums\">{orders * 5 * Math.floor(sells / orders * 100) / 100 * count}</span>}\r\n                р. ... Что скажете?</p>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Calculate","import { connect } from \"react-redux\";\r\nimport GetPerson from \"../getPerson/getPerson\"\r\nimport Calculate from \"../calculate/calculate\"\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst Dialog = ({ name, product, isCalculate }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"dialog\">\r\n            <Typography variant=\"h1\" className=\"dialog__title\" style={{ fontSize: \"33px\", marginBottom: \"20px\" }}>Скрипт отдела</Typography>\r\n            <Paper elevation={5} className=\"dialog__wrapper\" style={{ borderRadius: \"10px\" }}>\r\n                <GetPerson\r\n                    name={name}\r\n                    product={product} />\r\n                {isCalculate && <Calculate />}\r\n            </Paper>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: state.getPerson.managerName,\r\n    product: state.getPerson.product,\r\n    isCalculate: state.getPerson.isCalculate\r\n})\r\n\r\nexport default connect(mapStateToProps)(Dialog)","import InitialInputs from \"../initil-inputs/initial-inputs\"\r\nimport Dialog from \"../dialog/dialog\"\r\n\r\nconst Script = () => {\r\n\r\n    return (\r\n        <div className=\"script\">\r\n            <InitialInputs />\r\n            <Dialog />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Script","import Script from \"./components/script/script\";\nimport \"./styles.css\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: \"dark\"\n  });\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Script />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { ActionType } from \"../action\";\r\n\r\nconst initialState = {\r\n  isCalculate: false,\r\n  actualBtn: \"\",\r\n};\r\n\r\nexport const getPersonReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionType.SET_GET_PERSON_BTN:\r\n      return Object.assign({}, state, { actualBtn: action.payload });\r\n    case ActionType.SET_NEXT_STEP:\r\n      if (action.payload === \"calculate\") {\r\n        return Object.assign({}, state, { isCalculate: true });\r\n      }\r\n      return true;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionType } from \"../action\";\r\n\r\nconst initialState = {\r\n  managerName: null,\r\n  product: null,\r\n};\r\n\r\nexport const initilInputsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionType.SET_MANAGER_NAME:\r\n      return Object.assign({}, state, { managerName: action.payload });\r\n    case ActionType.SET_PRODUCT:\r\n      return Object.assign({}, state, { product: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { getPersonReducer } from \"./getPersonReducer/getPersonReducer\";\r\nimport { initilInputsReducer } from \"./initial-inputsReducer/initial-inputsReducer\";\r\n\r\nexport default combineReducers({\r\n  getPerson: getPersonReducer,\r\n  initialInputs: initilInputsReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/rootReducer\";\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}